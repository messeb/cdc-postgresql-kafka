version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181
      - 2888
      - 3888
    healthcheck:
      test: nc localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    links:
      - zookeeper
    ports:
      - 9092
      - 29092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://kafka:9092,INTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"

  postgresql:
    image: postgresql
    container_name: postgresql
    build:
      context: postgresql
      dockerfile: Dockerfile 
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  connect:
    image: debezium/connect:latest
    container_name: connect
    depends_on:
      kafka:
        condition: service_healthy
    links:
      - kafka
      - postgresql
    ports:
      - 8083:8083
    healthcheck:
      test: nc -z localhost 8083 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
  
  connect-config:
    image: connect-config
    container_name: connect-config
    build:
      context: connect-config
      dockerfile: Dockerfile
    depends_on:
      connect:
        condition: service_started
    restart: no

  console:
    image: redpandadata/console:latest
    container_name: console
    ports:
      - 8081:8080
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: dbuser@example.com
      PGADMIN_DEFAULT_PASSWORD: dbpassword
      PG_MODE: primary
      PG_PRIMARY_USER: dbuser
      PG_PRIMARY_PASSWORD: dbpassword
      PG_DATABASE: store
      PG_USER: dbuser
      PG_PASSWORD: dbpassword
      PG_ROOT_PASSWORD: dbpassword
      PG_PRIMARY_PORT: 5432
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - 8080:80
